{% extends '@OHMediaBackend/base.html.twig' %}

{% block meta_title %}{{ form_title }}{% endblock %}

{% macro form_row_hours(form) %}
<tr>
  <td>
    {{ form_widget(form.day, {
      attr: {
        class: 'form-select-sm',
      },
    }) }}
    {{ form_widget(form.closed) }}
  </td>
  <td>
    {{ form_widget(form.open, {
      attr: {
        class: 'form-control-sm',
      },
    }) }}
  </td>
  <td>
    {{ form_widget(form.close, {
      attr: {
        class: 'form-control-sm',
      },
    }) }}
    {{ form_widget(form.next_day_close) }}
  </td>
  <td>
    <a class="btn btn-danger btn-sm float-end" title="Delete">
      {{ bootstrap_icon('trash-fill') }}
      <span class="visually-hidden">Delete</span>
    </a>
  </td>
</tr>
{% endmacro %}

{% block main %}
<div class="row">
  <div class="col-xl-8">
    <div class="card">
      <div class="card-body">
        <h1 class="card-title h3">{{ form_title }}</h1>

        {{ form_start(form) }}
          {{ form_row(form.name) }}
          {{ form_row(form.address) }}
          <div class="row">
            <div class="col-6">{{ form_row(form.city) }}</div>
            <div class="col-6">
              {{ form_row(form.province) }}
              {{ form_row(form.provinces) }}
              {{ form_row(form.states) }}
            </div>
            <div class="col-6">{{ form_row(form.country) }}</div>
            <div class="col-6">
              {{ form_row(form.postal_code) }}
              {{ form_row(form.zip) }}
            </div>
            <div class="col-6">{{ form_row(form.phone) }}</div>
            <div class="col-6">{{ form_row(form.email) }}</div>
          </div>
          {{ form_row(form.main) }}

          {% do form.hours.setRendered %}

          <fieldset>
            {{ form_label(form.hours) }}

            <div id="{{ form.hours.vars.id }}">
              <table class="table table-sm">
                <thead>
                  <tr>
                    <th>Day</th>
                    <th>Open</th>
                    <th>Close</th>
                    <th>&nbsp;</th>
                  </tr>
                </thead>
                <tbody>
                {% for child in form.hours.children %}
                {{ _self.form_row_hours(child) }}
                {% endfor %}
                </tbody>
              </table>
            </div>
          </fieldset>
          {{ dump(form.hours) }}
        {{ form_end(form) }}
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
const province = document.getElementById('{{ form.province.vars.id }}');
const provinces = document.getElementById('{{ form.provinces.vars.id }}');
const states = document.getElementById('{{ form.states.vars.id }}');

provinces.addEventListener('change', () => {
  province.value = provinces.value;
});

states.addEventListener('change', () => {
  province.value = states.value;
});

const country = document.getElementById('{{ form.country.vars.id }}');

const postalCode = document.getElementById('{{ form.postal_code.vars.id }}');
const zip = document.getElementById('{{ form.zip.vars.id }}');

zip.addEventListener('input', () => {
  postalCode.value = zip.value;
});

zip.addEventListener('change', () => {
  postalCode.value = zip.value;
});

function showInput(input) {
  input.parentNode.style.display = '';
  input.required = true;
}

function hideInput(input) {
  input.parentNode.style.display = 'none';
  input.required = false;
}

function toggleFields() {
  if ('CA' === country.value) {
    showInput(provinces);
    showInput(postalCode);
    hideInput(province);
    hideInput(states);
    hideInput(zip);
    province.value = provinces.value;
  } else if ('US' === country.value) {
    showInput(states);
    showInput(zip);
    hideInput(province);
    hideInput(provinces);
    hideInput(postalCode);
    province.value = states.value;
    postalCode.value = zip.value;
  } else {
    showInput(province);
    showInput(postalCode);
    hideInput(provinces);
    hideInput(states);
    hideInput(zip);
  }
}

country.addEventListener('change', toggleFields);

toggleFields();

const hoursPrototype = {{ _self.form_row_hours(form.hours.vars.prototype)|json_encode|raw }};
});
</script>
{% endblock %}
